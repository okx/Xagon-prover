#include <alt_bn128.hpp>
#include "pilfflonk_steps.hpp"

void PilFflonkSteps::step3prev_first(AltBn128::Engine &E, PilFflonkStepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_39 = params.cm1_n[0 + i*6];
     AltBn128::FrElement tmp_0 = E.fr.mul(params.challenges[3], params.x_n[i]);
     AltBn128::FrElement tmp_1 = E.fr.add(tmp_39, tmp_0);
     AltBn128::FrElement tmp_40 = E.fr.add(tmp_1, params.challenges[2]);
     AltBn128::FrElement tmp_41 = params.cm1_n[1 + i*6];
     AltBn128::FrElement tmp_2 = E.fr.mul(params.challenges[3], params.constValues[0]);
     AltBn128::FrElement tmp_3 = E.fr.mul(tmp_2, params.x_n[i]);
     AltBn128::FrElement tmp_4 = E.fr.add(tmp_41, tmp_3);
     AltBn128::FrElement tmp_5 = E.fr.add(tmp_4, params.challenges[2]);
     AltBn128::FrElement tmp_42 = E.fr.mul(tmp_40, tmp_5);
     AltBn128::FrElement tmp_43 = params.cm1_n[2 + i*6];
     AltBn128::FrElement tmp_6 = E.fr.mul(params.challenges[3], params.constValues[1]);
     AltBn128::FrElement tmp_7 = E.fr.mul(tmp_6, params.x_n[i]);
     AltBn128::FrElement tmp_8 = E.fr.add(tmp_43, tmp_7);
     AltBn128::FrElement tmp_9 = E.fr.add(tmp_8, params.challenges[2]);
     AltBn128::FrElement tmp_44 = E.fr.mul(tmp_42, tmp_9);
     AltBn128::FrElement tmp_45 = params.cm1_n[3 + i*6];
     AltBn128::FrElement tmp_10 = E.fr.mul(params.challenges[3], params.constValues[2]);
     AltBn128::FrElement tmp_11 = E.fr.mul(tmp_10, params.x_n[i]);
     AltBn128::FrElement tmp_12 = E.fr.add(tmp_45, tmp_11);
     AltBn128::FrElement tmp_13 = E.fr.add(tmp_12, params.challenges[2]);
     AltBn128::FrElement tmp_46 = E.fr.mul(tmp_44, tmp_13);
     AltBn128::FrElement tmp_47 = params.cm1_n[4 + i*6];
     AltBn128::FrElement tmp_14 = E.fr.mul(params.challenges[3], params.constValues[3]);
     AltBn128::FrElement tmp_15 = E.fr.mul(tmp_14, params.x_n[i]);
     AltBn128::FrElement tmp_16 = E.fr.add(tmp_47, tmp_15);
     AltBn128::FrElement tmp_17 = E.fr.add(tmp_16, params.challenges[2]);
     AltBn128::FrElement tmp_48 = E.fr.mul(tmp_46, tmp_17);
     AltBn128::FrElement tmp_49 = params.cm1_n[5 + i*6];
     AltBn128::FrElement tmp_18 = E.fr.mul(params.challenges[3], params.constValues[4]);
     AltBn128::FrElement tmp_19 = E.fr.mul(tmp_18, params.x_n[i]);
     AltBn128::FrElement tmp_20 = E.fr.add(tmp_49, tmp_19);
     AltBn128::FrElement tmp_21 = E.fr.add(tmp_20, params.challenges[2]);
     params.tmpExp_n[0 + i*2] = E.fr.mul(tmp_48, tmp_21);
     AltBn128::FrElement tmp_50 = params.const_n[1 + i * 18];
     AltBn128::FrElement tmp_22 = E.fr.mul(params.challenges[3], tmp_50);
     AltBn128::FrElement tmp_23 = E.fr.add(tmp_39, tmp_22);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_23, params.challenges[2]);
     AltBn128::FrElement tmp_52 = params.const_n[2 + i * 18];
     AltBn128::FrElement tmp_24 = E.fr.mul(params.challenges[3], tmp_52);
     AltBn128::FrElement tmp_25 = E.fr.add(tmp_41, tmp_24);
     AltBn128::FrElement tmp_26 = E.fr.add(tmp_25, params.challenges[2]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_51, tmp_26);
     AltBn128::FrElement tmp_54 = params.const_n[3 + i * 18];
     AltBn128::FrElement tmp_27 = E.fr.mul(params.challenges[3], tmp_54);
     AltBn128::FrElement tmp_28 = E.fr.add(tmp_43, tmp_27);
     AltBn128::FrElement tmp_29 = E.fr.add(tmp_28, params.challenges[2]);
     AltBn128::FrElement tmp_55 = E.fr.mul(tmp_53, tmp_29);
     AltBn128::FrElement tmp_56 = params.const_n[4 + i * 18];
     AltBn128::FrElement tmp_30 = E.fr.mul(params.challenges[3], tmp_56);
     AltBn128::FrElement tmp_31 = E.fr.add(tmp_45, tmp_30);
     AltBn128::FrElement tmp_32 = E.fr.add(tmp_31, params.challenges[2]);
     AltBn128::FrElement tmp_57 = E.fr.mul(tmp_55, tmp_32);
     AltBn128::FrElement tmp_58 = params.const_n[5 + i * 18];
     AltBn128::FrElement tmp_33 = E.fr.mul(params.challenges[3], tmp_58);
     AltBn128::FrElement tmp_34 = E.fr.add(tmp_47, tmp_33);
     AltBn128::FrElement tmp_35 = E.fr.add(tmp_34, params.challenges[2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_57, tmp_35);
     AltBn128::FrElement tmp_60 = params.const_n[6 + i * 18];
     AltBn128::FrElement tmp_36 = E.fr.mul(params.challenges[3], tmp_60);
     AltBn128::FrElement tmp_37 = E.fr.add(tmp_49, tmp_36);
     AltBn128::FrElement tmp_38 = E.fr.add(tmp_37, params.challenges[2]);
     params.tmpExp_n[1 + i*2] = E.fr.mul(tmp_59, tmp_38);
}

void PilFflonkSteps::step3prev_i(AltBn128::Engine &E, PilFflonkStepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_39 = params.cm1_n[0 + i*6];
     AltBn128::FrElement tmp_0 = E.fr.mul(params.challenges[3], params.x_n[i]);
     AltBn128::FrElement tmp_1 = E.fr.add(tmp_39, tmp_0);
     AltBn128::FrElement tmp_40 = E.fr.add(tmp_1, params.challenges[2]);
     AltBn128::FrElement tmp_41 = params.cm1_n[1 + i*6];
     AltBn128::FrElement tmp_2 = E.fr.mul(params.challenges[3], params.constValues[0]);
     AltBn128::FrElement tmp_3 = E.fr.mul(tmp_2, params.x_n[i]);
     AltBn128::FrElement tmp_4 = E.fr.add(tmp_41, tmp_3);
     AltBn128::FrElement tmp_5 = E.fr.add(tmp_4, params.challenges[2]);
     AltBn128::FrElement tmp_42 = E.fr.mul(tmp_40, tmp_5);
     AltBn128::FrElement tmp_43 = params.cm1_n[2 + i*6];
     AltBn128::FrElement tmp_6 = E.fr.mul(params.challenges[3], params.constValues[1]);
     AltBn128::FrElement tmp_7 = E.fr.mul(tmp_6, params.x_n[i]);
     AltBn128::FrElement tmp_8 = E.fr.add(tmp_43, tmp_7);
     AltBn128::FrElement tmp_9 = E.fr.add(tmp_8, params.challenges[2]);
     AltBn128::FrElement tmp_44 = E.fr.mul(tmp_42, tmp_9);
     AltBn128::FrElement tmp_45 = params.cm1_n[3 + i*6];
     AltBn128::FrElement tmp_10 = E.fr.mul(params.challenges[3], params.constValues[2]);
     AltBn128::FrElement tmp_11 = E.fr.mul(tmp_10, params.x_n[i]);
     AltBn128::FrElement tmp_12 = E.fr.add(tmp_45, tmp_11);
     AltBn128::FrElement tmp_13 = E.fr.add(tmp_12, params.challenges[2]);
     AltBn128::FrElement tmp_46 = E.fr.mul(tmp_44, tmp_13);
     AltBn128::FrElement tmp_47 = params.cm1_n[4 + i*6];
     AltBn128::FrElement tmp_14 = E.fr.mul(params.challenges[3], params.constValues[3]);
     AltBn128::FrElement tmp_15 = E.fr.mul(tmp_14, params.x_n[i]);
     AltBn128::FrElement tmp_16 = E.fr.add(tmp_47, tmp_15);
     AltBn128::FrElement tmp_17 = E.fr.add(tmp_16, params.challenges[2]);
     AltBn128::FrElement tmp_48 = E.fr.mul(tmp_46, tmp_17);
     AltBn128::FrElement tmp_49 = params.cm1_n[5 + i*6];
     AltBn128::FrElement tmp_18 = E.fr.mul(params.challenges[3], params.constValues[4]);
     AltBn128::FrElement tmp_19 = E.fr.mul(tmp_18, params.x_n[i]);
     AltBn128::FrElement tmp_20 = E.fr.add(tmp_49, tmp_19);
     AltBn128::FrElement tmp_21 = E.fr.add(tmp_20, params.challenges[2]);
     params.tmpExp_n[0 + i*2] = E.fr.mul(tmp_48, tmp_21);
     AltBn128::FrElement tmp_50 = params.const_n[1 + i * 18];
     AltBn128::FrElement tmp_22 = E.fr.mul(params.challenges[3], tmp_50);
     AltBn128::FrElement tmp_23 = E.fr.add(tmp_39, tmp_22);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_23, params.challenges[2]);
     AltBn128::FrElement tmp_52 = params.const_n[2 + i * 18];
     AltBn128::FrElement tmp_24 = E.fr.mul(params.challenges[3], tmp_52);
     AltBn128::FrElement tmp_25 = E.fr.add(tmp_41, tmp_24);
     AltBn128::FrElement tmp_26 = E.fr.add(tmp_25, params.challenges[2]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_51, tmp_26);
     AltBn128::FrElement tmp_54 = params.const_n[3 + i * 18];
     AltBn128::FrElement tmp_27 = E.fr.mul(params.challenges[3], tmp_54);
     AltBn128::FrElement tmp_28 = E.fr.add(tmp_43, tmp_27);
     AltBn128::FrElement tmp_29 = E.fr.add(tmp_28, params.challenges[2]);
     AltBn128::FrElement tmp_55 = E.fr.mul(tmp_53, tmp_29);
     AltBn128::FrElement tmp_56 = params.const_n[4 + i * 18];
     AltBn128::FrElement tmp_30 = E.fr.mul(params.challenges[3], tmp_56);
     AltBn128::FrElement tmp_31 = E.fr.add(tmp_45, tmp_30);
     AltBn128::FrElement tmp_32 = E.fr.add(tmp_31, params.challenges[2]);
     AltBn128::FrElement tmp_57 = E.fr.mul(tmp_55, tmp_32);
     AltBn128::FrElement tmp_58 = params.const_n[5 + i * 18];
     AltBn128::FrElement tmp_33 = E.fr.mul(params.challenges[3], tmp_58);
     AltBn128::FrElement tmp_34 = E.fr.add(tmp_47, tmp_33);
     AltBn128::FrElement tmp_35 = E.fr.add(tmp_34, params.challenges[2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_57, tmp_35);
     AltBn128::FrElement tmp_60 = params.const_n[6 + i * 18];
     AltBn128::FrElement tmp_36 = E.fr.mul(params.challenges[3], tmp_60);
     AltBn128::FrElement tmp_37 = E.fr.add(tmp_49, tmp_36);
     AltBn128::FrElement tmp_38 = E.fr.add(tmp_37, params.challenges[2]);
     params.tmpExp_n[1 + i*2] = E.fr.mul(tmp_59, tmp_38);
}

void PilFflonkSteps::step3prev_last(AltBn128::Engine &E, PilFflonkStepsParams &params, uint64_t i) {
     AltBn128::FrElement tmp_39 = params.cm1_n[0 + i*6];
     AltBn128::FrElement tmp_0 = E.fr.mul(params.challenges[3], params.x_n[i]);
     AltBn128::FrElement tmp_1 = E.fr.add(tmp_39, tmp_0);
     AltBn128::FrElement tmp_40 = E.fr.add(tmp_1, params.challenges[2]);
     AltBn128::FrElement tmp_41 = params.cm1_n[1 + i*6];
     AltBn128::FrElement tmp_2 = E.fr.mul(params.challenges[3], params.constValues[0]);
     AltBn128::FrElement tmp_3 = E.fr.mul(tmp_2, params.x_n[i]);
     AltBn128::FrElement tmp_4 = E.fr.add(tmp_41, tmp_3);
     AltBn128::FrElement tmp_5 = E.fr.add(tmp_4, params.challenges[2]);
     AltBn128::FrElement tmp_42 = E.fr.mul(tmp_40, tmp_5);
     AltBn128::FrElement tmp_43 = params.cm1_n[2 + i*6];
     AltBn128::FrElement tmp_6 = E.fr.mul(params.challenges[3], params.constValues[1]);
     AltBn128::FrElement tmp_7 = E.fr.mul(tmp_6, params.x_n[i]);
     AltBn128::FrElement tmp_8 = E.fr.add(tmp_43, tmp_7);
     AltBn128::FrElement tmp_9 = E.fr.add(tmp_8, params.challenges[2]);
     AltBn128::FrElement tmp_44 = E.fr.mul(tmp_42, tmp_9);
     AltBn128::FrElement tmp_45 = params.cm1_n[3 + i*6];
     AltBn128::FrElement tmp_10 = E.fr.mul(params.challenges[3], params.constValues[2]);
     AltBn128::FrElement tmp_11 = E.fr.mul(tmp_10, params.x_n[i]);
     AltBn128::FrElement tmp_12 = E.fr.add(tmp_45, tmp_11);
     AltBn128::FrElement tmp_13 = E.fr.add(tmp_12, params.challenges[2]);
     AltBn128::FrElement tmp_46 = E.fr.mul(tmp_44, tmp_13);
     AltBn128::FrElement tmp_47 = params.cm1_n[4 + i*6];
     AltBn128::FrElement tmp_14 = E.fr.mul(params.challenges[3], params.constValues[3]);
     AltBn128::FrElement tmp_15 = E.fr.mul(tmp_14, params.x_n[i]);
     AltBn128::FrElement tmp_16 = E.fr.add(tmp_47, tmp_15);
     AltBn128::FrElement tmp_17 = E.fr.add(tmp_16, params.challenges[2]);
     AltBn128::FrElement tmp_48 = E.fr.mul(tmp_46, tmp_17);
     AltBn128::FrElement tmp_49 = params.cm1_n[5 + i*6];
     AltBn128::FrElement tmp_18 = E.fr.mul(params.challenges[3], params.constValues[4]);
     AltBn128::FrElement tmp_19 = E.fr.mul(tmp_18, params.x_n[i]);
     AltBn128::FrElement tmp_20 = E.fr.add(tmp_49, tmp_19);
     AltBn128::FrElement tmp_21 = E.fr.add(tmp_20, params.challenges[2]);
     params.tmpExp_n[0 + i*2] = E.fr.mul(tmp_48, tmp_21);
     AltBn128::FrElement tmp_50 = params.const_n[1 + i * 18];
     AltBn128::FrElement tmp_22 = E.fr.mul(params.challenges[3], tmp_50);
     AltBn128::FrElement tmp_23 = E.fr.add(tmp_39, tmp_22);
     AltBn128::FrElement tmp_51 = E.fr.add(tmp_23, params.challenges[2]);
     AltBn128::FrElement tmp_52 = params.const_n[2 + i * 18];
     AltBn128::FrElement tmp_24 = E.fr.mul(params.challenges[3], tmp_52);
     AltBn128::FrElement tmp_25 = E.fr.add(tmp_41, tmp_24);
     AltBn128::FrElement tmp_26 = E.fr.add(tmp_25, params.challenges[2]);
     AltBn128::FrElement tmp_53 = E.fr.mul(tmp_51, tmp_26);
     AltBn128::FrElement tmp_54 = params.const_n[3 + i * 18];
     AltBn128::FrElement tmp_27 = E.fr.mul(params.challenges[3], tmp_54);
     AltBn128::FrElement tmp_28 = E.fr.add(tmp_43, tmp_27);
     AltBn128::FrElement tmp_29 = E.fr.add(tmp_28, params.challenges[2]);
     AltBn128::FrElement tmp_55 = E.fr.mul(tmp_53, tmp_29);
     AltBn128::FrElement tmp_56 = params.const_n[4 + i * 18];
     AltBn128::FrElement tmp_30 = E.fr.mul(params.challenges[3], tmp_56);
     AltBn128::FrElement tmp_31 = E.fr.add(tmp_45, tmp_30);
     AltBn128::FrElement tmp_32 = E.fr.add(tmp_31, params.challenges[2]);
     AltBn128::FrElement tmp_57 = E.fr.mul(tmp_55, tmp_32);
     AltBn128::FrElement tmp_58 = params.const_n[5 + i * 18];
     AltBn128::FrElement tmp_33 = E.fr.mul(params.challenges[3], tmp_58);
     AltBn128::FrElement tmp_34 = E.fr.add(tmp_47, tmp_33);
     AltBn128::FrElement tmp_35 = E.fr.add(tmp_34, params.challenges[2]);
     AltBn128::FrElement tmp_59 = E.fr.mul(tmp_57, tmp_35);
     AltBn128::FrElement tmp_60 = params.const_n[6 + i * 18];
     AltBn128::FrElement tmp_36 = E.fr.mul(params.challenges[3], tmp_60);
     AltBn128::FrElement tmp_37 = E.fr.add(tmp_49, tmp_36);
     AltBn128::FrElement tmp_38 = E.fr.add(tmp_37, params.challenges[2]);
     params.tmpExp_n[1 + i*2] = E.fr.mul(tmp_59, tmp_38);
}
